###
# LL(1) grammar for the Prev programming language.
# Credits to Rok Grmek for the original version of the grammar.
###

########################################################
### Source structure

Source -> Expression end_of_file

########################################################
### Expressions

Expression -> E0

E0       -> E1 ExtOrXor
ExtOrXor -> $
ExtOrXor -> or E1 ExtOrXor
ExtOrXor -> xor E1 ExtOrXor

E1     -> E2 ExtAnd
ExtAnd -> $
ExtAnd -> and E2 ExtAnd

E2     -> E3 OptRel
OptRel -> $
OptRel -> equ E3
OptRel -> neq E3
OptRel -> leq E3
OptRel -> geq E3
OptRel -> lth E3
OptRel -> gth E3

E3        -> E4 ExtAddSub
ExtAddSub -> $
ExtAddSub -> add E4 ExtAddSub
ExtAddSub -> sub E4 ExtAddSub

E4           -> E5 ExtMulDivMod
ExtMulDivMod -> $
ExtMulDivMod -> mul E5 ExtMulDivMod
ExtMulDivMod -> div E5 ExtMulDivMod
ExtMulDivMod -> mod E5 ExtMulDivMod

E5       -> E6
E5       -> ExtUnary
ExtUnary -> Unary0
ExtUnary -> Unary1

Unary0 -> not E5
Unary0 -> add E5
Unary0 -> sub E5
Unary0 -> mem E5
Unary0 -> val E5
Unary0 -> del E5
Unary1 -> left_bracket Type right_bracket E5

E6 -> New
E6 -> E7

New -> new Type

E7        -> E8 ExtAccess
ExtAccess -> $
ExtAccess -> ArrayAccess ExtAccess
ExtAccess -> ComponentAccess ExtAccess

ArrayAccess     -> left_bracket Expression right_bracket
ComponentAccess -> dot identifier

E8 -> void_literal
E8 -> bool_literal
E8 -> char_literal
E8 -> int_literal
E8 -> ptr_literal
E8 -> IdOrCall
E8 -> Compound
E8 -> Parenthesis

IdOrCall    -> identifier OptFunctionCall
Compound    -> left_brace Statements colon Expression OptWhere right_brace
Parenthesis -> left_parenthesis Expression right_parenthesis

OptFunctionCall -> $
OptFunctionCall -> left_parenthesis OptArguments right_parenthesis

OptArguments -> $
OptArguments -> Expression ExtArguments
ExtArguments -> $
ExtArguments -> comma Expression ExtArguments

OptWhere -> $
OptWhere -> where Declarations

########################################################
### Types

Type -> void
Type -> bool
Type -> char
Type -> int
Type -> Array
Type -> Record
Type -> Pointer
Type -> identifier

Array   -> arr left_bracket Expression right_bracket Type
Record  -> rec left_parenthesis Components right_parenthesis
Pointer -> ptr Type

Components    -> Component ExtComponents
ExtComponents -> $
ExtComponents -> comma Component ExtComponents
Component     -> identifier colon Type

########################################################
### Statements

Statements    -> Statement ExtStatements
ExtStatements -> $
ExtStatements -> semi_colon Statement ExtStatements

Statement -> ExpressionStatement
Statement -> If
Statement -> While

ExpressionStatement -> Expression OptAssign
If                  -> if Expression then Statements OptElse end
While               -> while Expression do Statements end

OptAssign -> $
OptAssign -> assign Expression

OptElse -> $
OptElse -> else Statements

########################################################
### Declarations

Declarations    -> Declaration ExtDeclarations
ExtDeclarations -> $
ExtDeclarations -> semi_colon Declaration ExtDeclarations

Declaration -> TypeDeclaration
Declaration -> VariableDeclaration
Declaration -> FunctionDeclaration

TypeDeclaration     -> typ identifier colon Type
VariableDeclaration -> var identifier colon Type
FunctionDeclaration -> fun identifier left_parenthesis OptParameters right_parenthesis colon Type OptImplementation

OptParameters -> $
OptParameters -> Parameter ExtParameters
ExtParameters -> $
ExtParameters -> comma Parameter ExtParameters
Parameter     -> identifier colon Type

OptImplementation -> $
OptImplementation -> assign Expression
